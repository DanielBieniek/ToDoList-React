{"version":3,"sources":["components/Header.js","components/SearchAndSort.js","components/ListElement.js","components/ToDoList.js","components/Login.js","components/Register.js","components/Task.js","components/NewTask.js","components/Tasks.js","App.js","index.js"],"names":["Header","loggedIn","setLoggedIn","setLists","hasOwnProperty","user","id","role","onClick","SearchAndSort","search","setSearch","setSort","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","ListElement","list","handleDeleteListElement","to","name","published_at","substring","task","filter","t","isDone","length","ToDoList","lists","auth","history","useHistory","useState","sort","useEffect","readList","a","sortQuery","fetch","method","headers","readListRequestResult","json","Array","isArray","emptyListObject","generateNewList","body","JSON","stringify","newListRequestResult","tempList","concat","push","deleteRequestResult","toLowerCase","includes","map","Login","loginRequest","setLoginRequest","handleLogin","loginRequestResult","message","messages","identifier","password","Register","registerRequest","setRegisterRequest","repeatPassword","setRepeatPassword","handleRegister","registerRequestResult","console","log","username","email","Task","item","handleChangeCheckbox","handleChangeTaskName","handleDeleteTask","checked","tabIndex","NewTask","newTask","setNewTask","handleAddTask","required","Tasks","useParams","setList","readTask","readTaskRequestResult","itemId","handleSaveList","putListObject","putListRequestResult","findIndex","parseInt","handleChangeListName","App","parse","localStorage","getItem","setItem","removeItem","exact","path","jwt","ReactDOM","render","StrictMode","component","document","getElementById"],"mappings":"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","file":"static/js/main.7d5eb5ec.chunk.js","sourcesContent":["import { FaSignOutAlt } from 'react-icons/fa';\r\n\r\nconst Header = ({ loggedIn, setLoggedIn, setLists }) => {\r\n\r\n    const handleLogout = () => {\r\n        setLists([])\r\n        setLoggedIn({})\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <span>ToDo-List</span>\r\n            {(loggedIn.hasOwnProperty(\"user\") ?? loggedIn.user.id) ? <FaSignOutAlt role=\"button\" onClick={handleLogout} /> : ''}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","const SearchAndSort = ({ search, setSearch, setSort }) => {\r\n    return (\r\n        <div className=\"SearchAndSort\">\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <input\r\n                    id=\"search\"\r\n                    type=\"text\"\r\n                    role=\"searchbox\"\r\n                    placeholder=\"Search\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n            </form>\r\n            <select onChange={(e) => setSort(e.target.value)}>\r\n                <option value=\"\">Creation Date</option>\r\n                <option value=\"name\">Name</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchAndSort","import { Link } from 'react-router-dom'\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\n\r\nconst ListElement = ({ list, handleDeleteListElement }) => {\r\n    return (\r\n        <>\r\n            <Link to={\"/list/\" + list.id} className=\"ListElementLink\">\r\n                <span className=\"TaskName\">{list.name}</span>\r\n                <span>Created at: {list.published_at.substring(0, 10)}</span>\r\n                <span>\r\n                    Completed: {list.task.filter((t) => t.isDone === true).length} Uncompleted: {list.task.filter((t) => t.isDone === false).length} All: {list.task.length}\r\n                </span>\r\n            </Link>\r\n            <FaTrashAlt className=\"trashButton\" role=\"button\" onClick={() => handleDeleteListElement(list.id)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListElement","import SearchAndSort from './SearchAndSort'\r\nimport ListElement from './ListElement'\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ToDoList = ({ lists, setLists, auth }) => {\r\n    let history = useHistory();\r\n    const [search, setSearch] = useState('');\r\n    const [sort, setSort] = useState('');\r\n\r\n    useEffect(() => {\r\n        const readList = async () => {\r\n            let sortQuery = sort ? \"?_sort=\" + sort : \"\";\r\n            let readListRequestResult = await fetch(\"https://recruitment.ultimate.systems/to-do-lists\" + sortQuery, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + auth,\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            });\r\n            readListRequestResult = await readListRequestResult.json();\r\n\r\n            if (Array.isArray(readListRequestResult)) {\r\n                setLists(readListRequestResult);\r\n            }\r\n        }\r\n        (async () => await readList())();\r\n    }, [sort])\r\n\r\n    const emptyListObject = {\r\n        \"name\": \"ToDo List Name\",\r\n        \"task\": []\r\n    }\r\n\r\n    const generateNewList = async () => {\r\n        let newListRequestResult = await fetch(\"https://recruitment.ultimate.systems/to-do-lists\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + auth,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(emptyListObject)\r\n        });\r\n        newListRequestResult = await newListRequestResult.json();\r\n\r\n        if (newListRequestResult.hasOwnProperty(\"id\")) {\r\n            const tempList = lists.concat(newListRequestResult);\r\n            setLists(tempList);\r\n            history.push(\"/list/\" + newListRequestResult.id);\r\n        }\r\n    }\r\n\r\n    const handleDeleteListElement = async (id) => {\r\n        let deleteRequestResult = await fetch(\"https://recruitment.ultimate.systems/to-do-lists/\" + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + auth,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        });\r\n        deleteRequestResult = await deleteRequestResult.json();\r\n\r\n        if (deleteRequestResult.hasOwnProperty(\"id\")) {\r\n            const tempList = lists.filter(list => list.id !== deleteRequestResult.id);\r\n            setLists(tempList);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"ToDoList\">\r\n            <ul>\r\n                <SearchAndSort search={search} setSearch={setSearch} setSort={setSort} />\r\n                {!lists?.length ?\r\n                    <li className=\"ListElement\">\r\n                        <span>List is empty.</span>\r\n                    </li>\r\n                    : <>\r\n                        {lists.filter(list => ((list.name).toLowerCase()).includes(search.toLowerCase())).map(list =>\r\n                            <li className=\"ListElement\" key={list.id}>\r\n                                <ListElement list={list} handleDeleteListElement={handleDeleteListElement} />\r\n                            </li>\r\n                        )}\r\n                    </>}\r\n            </ul>\r\n            <FaPlusCircle className=\"link addListButton\" role=\"button\" onClick={generateNewList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList","import { Link } from 'react-router-dom'\r\nimport { useState } from 'react';\r\n\r\nconst Login = ({ loggedIn, setLoggedIn }) => {\r\n    const [loginRequest, setLoginRequest] = useState({ \"identifier\": \"\", \"password\": \"\" });\r\n\r\n    const handleChangeIdentifier = (e) => {\r\n        setLoginRequest({ ...loginRequest, identifier: e.target.value });\r\n    }\r\n\r\n    const handleChangePassword = (e) => {\r\n        setLoginRequest({ ...loginRequest, password: e.target.value });\r\n    }\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        let loginRequestResult = await fetch(\"https://recruitment.ultimate.systems/auth/local\", {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(loginRequest)\r\n        });\r\n        loginRequestResult = await loginRequestResult.json();\r\n        setLoggedIn(loginRequestResult);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1>Login</h1><br />\r\n            <div className=\"LoginError\">\r\n                {loggedIn.hasOwnProperty(\"message\") ? loggedIn.message[0].messages[0].message : ''}\r\n            </div>\r\n            <form onSubmit={handleLogin} >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email or Username\"\r\n                    onChange={handleChangeIdentifier}\r\n                    value={loginRequest.identifier}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChangePassword}\r\n                    value={loginRequest.password}\r\n                />\r\n                <button type=\"submit\">Login</button>\r\n            </form>\r\n            <p>or</p>\r\n            <Link to=\"/register\" className=\"link\"> create an account </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import { Link } from 'react-router-dom'\r\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\r\nimport { useState } from 'react';\r\n\r\nconst Register = ({ loggedIn, setLoggedIn }) => {\r\n    const [registerRequest, setRegisterRequest] = useState({ \"username\": \"\", \"email\": \"\", \"password\": \"\" });\r\n    const [repeatPassword, setRepeatPassword] = useState({ \"password\": \"\" });\r\n\r\n    const handleChangeUsername = (e) => {\r\n        setRegisterRequest({ ...registerRequest, username: e.target.value });\r\n    }\r\n\r\n    const handleChangeEmail = (e) => {\r\n        setRegisterRequest({ ...registerRequest, email: e.target.value });\r\n    }\r\n\r\n    const handleChangePassword = (e) => {\r\n        setRegisterRequest({ ...registerRequest, password: e.target.value });\r\n    }\r\n\r\n    const handleChangeRepeatPassword = (e) => {\r\n        setRepeatPassword({ password: e.target.value });\r\n    }\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        if (registerRequest.password === repeatPassword.password) {\r\n            let registerRequestResult = await fetch(\"https://recruitment.ultimate.systems/auth/local/register\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(registerRequest)\r\n            });\r\n            registerRequestResult = await registerRequestResult.json();\r\n            console.log(registerRequestResult);\r\n            setLoggedIn(registerRequestResult);\r\n        } else {\r\n            setLoggedIn({ \"message\": [{ \"messages\": [{ \"message\": \"Passwords are not equal.\" }] }] });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Register\">\r\n            <Link to=\"/\" className=\"link\"> <FaLongArrowAltLeft /> </Link>\r\n            <h1>Create a new account</h1><br />\r\n            <div className=\"LoginError\">\r\n                {loggedIn.hasOwnProperty(\"message\") ? loggedIn.message[0].messages[0].message : ''}\r\n            </div>\r\n            <form onSubmit={handleRegister} >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    onChange={handleChangeUsername}\r\n                    value={registerRequest.username}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChangeEmail}\r\n                    value={registerRequest.email}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChangePassword}\r\n                    value={registerRequest.password}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Repeat Password\"\r\n                    onChange={handleChangeRepeatPassword}\r\n                    value={repeatPassword.password}\r\n                />\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import { FaTrashAlt } from 'react-icons/fa';\r\n\r\nconst Task = ({ item, handleChangeCheckbox, handleChangeTaskName, handleDeleteTask }) => {\r\n    return (\r\n        <li className=\"TaskElement\">\r\n            <input\r\n                onChange={() => handleChangeCheckbox(item.id)}\r\n                type=\"checkbox\"\r\n                checked={item.isDone}\r\n            />\r\n            <input\r\n                onChange={(e) => handleChangeTaskName(e, item.id)}\r\n                type=\"text\"\r\n                placeholder=\"Task name\"\r\n                value={item.name}\r\n            />\r\n            <FaTrashAlt className=\"trashButton\" role=\"button\" tabIndex=\"0\" onClick={() => handleDeleteTask(item.id)} />\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Task","const NewTask = ({ newTask, setNewTask, handleAddTask }) => {\r\n    return (\r\n        <li className=\"TaskElement\">\r\n            <form onSubmit={(e) => handleAddTask(e)} >\r\n                <input\r\n                    id=\"addTaskCheckBox\"\r\n                    type=\"checkbox\"\r\n                    checked={newTask.isDone}\r\n                    onChange={(e) => setNewTask({ ...newTask, isDone: !newTask.isDone })}\r\n                />\r\n                <input\r\n                    id=\"addTaskText\"\r\n                    type=\"text\"\r\n                    placeholder=\"Task name\"\r\n                    value={newTask.name}\r\n                    onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\r\n                    required\r\n                />\r\n                <button type=\"submit\" className=\"AddTask\">ADD</button>\r\n            </form>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default NewTask","import { useHistory, useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react';\r\nimport Task from './Task'\r\nimport NewTask from './NewTask'\r\n\r\nconst Tasks = ({ lists, setLists, auth }) => {\r\n    let history = useHistory();\r\n    let { id } = useParams();\r\n\r\n    const [list, setList] = useState({\r\n        'name': \"\",\r\n        'task': [],\r\n    });\r\n\r\n    const [newTask, setNewTask] = useState({\r\n        'id': 1,\r\n        'name': '',\r\n        'isDone': false\r\n    });\r\n\r\n    useEffect(() => {\r\n        const readTask = async () => {\r\n            let readTaskRequestResult = await fetch(\"https://recruitment.ultimate.systems/to-do-lists/\" + id, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Authorization\": \"Bearer \" + auth,\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            });\r\n            readTaskRequestResult = await readTaskRequestResult.json();\r\n\r\n            if (readTaskRequestResult.hasOwnProperty(\"id\")) {\r\n                setList({\r\n                    'name': readTaskRequestResult.name,\r\n                    'task': readTaskRequestResult.task\r\n                });\r\n                setNewTask({ ...newTask, id: readTaskRequestResult.task.length ? readTaskRequestResult.task[readTaskRequestResult.task.length - 1].id + 1 : 1 });\r\n            }\r\n        }\r\n        (async () => await readTask())();\r\n    }, [])\r\n\r\n    const handleChangeListName = (e) => {\r\n        const tempList = { ...list, name: e.target.value };\r\n        setList(tempList);\r\n    }\r\n\r\n    const handleChangeCheckbox = (itemId) => {\r\n        const tempList = { ...list, task: list.task.map(item => item.id === itemId ? { ...item, isDone: !item.isDone } : item) };\r\n        setList(tempList);\r\n    }\r\n\r\n    const handleChangeTaskName = (e, itemId) => {\r\n        const tempList = { ...list, task: list.task.map(item => item.id === itemId ? { ...item, name: e.target.value } : item) };\r\n        setList(tempList);\r\n    }\r\n\r\n\r\n    const handleDeleteTask = (itemId) => {\r\n        const tempList = { ...list, task: list.task.filter(item => item.id !== itemId) };\r\n        setList(tempList);\r\n    }\r\n\r\n    const handleAddTask = (e) => {\r\n        e.preventDefault();\r\n        const tempList = { ...list, task: list.task.concat(newTask) };\r\n        setList(tempList);\r\n        setNewTask({\r\n            'id': newTask.id + 1,\r\n            'name': '',\r\n            'isDone': false\r\n        });\r\n    }\r\n\r\n    const handleSaveList = async () => {\r\n\r\n        const putListObject = {\r\n            'name': list.name,\r\n            'task': list.task.map(task => {\r\n                return {\r\n                    'name': task.name,\r\n                    'isDone': task.isDone\r\n                }\r\n            })\r\n        };\r\n\r\n        let putListRequestResult = await fetch(\"https://recruitment.ultimate.systems/to-do-lists/\" + id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + auth,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(putListObject)\r\n        });\r\n        putListRequestResult = await putListRequestResult.json();\r\n\r\n        if (putListRequestResult.hasOwnProperty(\"id\")) {\r\n            history.push(\"/list\");\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        history.push(\"/list\");\r\n    }\r\n\r\n    if (lists.findIndex((list) => list.id === parseInt(id)) < 0) {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tasks\">\r\n            <input\r\n                onChange={(e) => handleChangeListName(e)}\r\n                type=\"text\"\r\n                placeholder=\"List name\"\r\n                value={list.name}\r\n            />\r\n            <ul className=\"TaskList\">\r\n                {list.task.map(item =>\r\n                    <Task\r\n                        key={item.id}\r\n                        item={item}\r\n                        handleChangeCheckbox={handleChangeCheckbox}\r\n                        handleChangeTaskName={handleChangeTaskName}\r\n                        handleDeleteTask={handleDeleteTask}\r\n                    />\r\n                )}\r\n                <NewTask\r\n                    newTask={newTask}\r\n                    handleAddTask={handleAddTask}\r\n                    setNewTask={setNewTask}\r\n                />\r\n            </ul>\r\n            <div className=\"TaskNav\">\r\n                <button onClick={handleCancel} className=\"Cancel\">CANCEL</button>\r\n                <button onClick={handleSaveList}>SAVE</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Tasks","import Header from './components/Header'\nimport ToDoList from './components/ToDoList'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Tasks from './components/Tasks'\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState({});\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    setLoggedIn(JSON.parse(localStorage.getItem('loggedIn')) || {});\n    setLists(JSON.parse(localStorage.getItem('ToDoList')) || []);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('ToDoList', JSON.stringify(lists));\n  }, [lists])\n\n  useEffect(() => {\n    if (loggedIn.hasOwnProperty(\"user\")) {\n      localStorage.setItem('loggedIn', JSON.stringify(loggedIn));\n    } else {\n      localStorage.removeItem('loggedIn');\n    }\n  }, [loggedIn])\n\n  return (\n    <div className=\"App\">\n      <Header loggedIn={loggedIn} setLoggedIn={setLoggedIn} setLists={setLists} />\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            {(loggedIn.hasOwnProperty(\"user\") ?? loggedIn.user.id) ? <Redirect to=\"/list\" /> : <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} />}\n          </Route>\n          <Route path=\"/register\">\n            {(loggedIn.hasOwnProperty(\"user\") ?? loggedIn.user.id) ? <Redirect to=\"/list\" /> : <Register loggedIn={loggedIn} setLoggedIn={setLoggedIn} />}\n          </Route>\n          <Route exact path=\"/list\">\n            {!(loggedIn.hasOwnProperty(\"user\") ?? loggedIn.user.id) ? <Redirect to=\"/\" /> : <ToDoList lists={lists} setLists={setLists} auth={loggedIn.jwt} />}\n          </Route>\n          <Route path=\"/list/:id\">\n            {!(loggedIn.hasOwnProperty(\"user\") ?? loggedIn.user.id) ? <Redirect to=\"/\" /> : <Tasks lists={lists} setLists={setLists} auth={loggedIn.jwt} />}\n          </Route>\n          <Route path=\"*\">\n            <div>404 - webpage not found</div>\n          </Route>\n        </Switch>\n      </main>\n      <footer>Daniel Bieniek</footer>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/\" component={App} />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}